name: Docker artifact CI process for Go project

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21'
    
    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Linting
      run: golangci-lint run

    - name: Run Tests
      run: go test

    - name: Build the Go binary
      run: go build -o main .

    - name: Build Docker Image
      run: docker build -t openx_intern_task -f Dockerfile-go .

    - name: Run Docker Container
      run: docker run -d -p 8080:8080 --name openx_intern_task openx_intern_task

    - name: Wait for container to be running
      run: |
        echo "Checking container status..."
        timeout 10 bash -c 'while [[ "$(docker inspect -f {{.State.Status}} openx_intern_task)" != "running" ]]; do sleep 1; done'

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag Artifact Docker Image
      run: docker tag openx_intern_task ${{ secrets.DOCKER_USERNAME }}/openx_intern_task:1.0.0

    - name: Push Artifact to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/openx_intern_task:1.0.0

    - name: Check Helm Chart Syntax
      run: helm lint openx-api/
